<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.fedorahosted.flies</groupId>
    <artifactId>root</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <groupId>org.fedorahosted.flies</groupId>
  <artifactId>flies</artifactId>
  <packaging>war</packaging>
  <name>flies Webapp</name>

  <properties>    
    <!-- application properties -->
    <app.context>flies</app.context>  <!-- hint: same value as artifactId -->
    <app.database.name>flies</app.database.name>
    <app.ds.xml>${app.context}-ds.xml</app.ds.xml>

    <!-- Production environment properties. Can be modified by developer in "profiles.xml" -->
    <env.debug>false</env.debug>
    <env.server.path>http://localhost:8080/flies</env.server.path>
    <env.import.testdata>false</env.import.testdata>
    <env.dbunit.type>HSQL</env.dbunit.type>
    <env.hibernate.hbm2ddl.auto>update</env.hibernate.hbm2ddl.auto>
    <env.hibernate.show_sql>false</env.hibernate.show_sql>
    <env.hibernate.format_sql>false</env.hibernate.format_sql>
    <env.hibernate.default_batch_size>16</env.hibernate.default_batch_size>
    
    <as>jboss423</as>
    <as.version>4.2</as.version>
    <ds>hsqldb</ds>
    <ds.hibernate.dialect>org.hibernate.dialect.HSQLDialect</ds.hibernate.dialect> <!-- persistence.xml -->
    <ds.driver.class>org.hsqldb.jdbcDriver</ds.driver.class> <!-- *-ds.xml -->
    <ds.server.name></ds.server.name> <!-- *-ds.xml (if xa) -->
    <ds.database.name>${app.database.name}</ds.database.name> <!-- *-ds.xml (if xa) -->
    <ds.connection.url>jdbc:hsqldb:.</ds.connection.url> <!-- *-ds.xml -->
    <ds.user.name>sa</ds.user.name> <!-- *-ds.xml -->
    <ds.password></ds.password> <!-- *-ds.xml -->    
   
    <gwt.filepattern>org.fedorahosted.flies.*/**</gwt.filepattern>
    
    <webapp.dir>${basedir}/war</webapp.dir>
    <!-- 
    <webapp.dir>${basedir}/src/main/webapp</webapp.dir>
     -->
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.seam</groupId>
        <artifactId>root</artifactId>
        <version>${version.seam}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
  
    <profile>
      <id>env-dev</id>
      <activation>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
      <properties>
        <!-- Developer environment properties. 
             Can be modified by developer in "profiles.xml" 
        -->
        <env>dev</env>
        <env.debug>true</env.debug>
        <env.import.testdata>true</env.import.testdata>
        <env.hibernate.hbm2ddl.auto>create-drop</env.hibernate.hbm2ddl.auto>
        <env.hibernate.show_sql>false</env.hibernate.show_sql>
        <env.hibernate.format_sql>true</env.hibernate.format_sql>
        <env.hibernate.default_batch_size>16</env.hibernate.default_batch_size>
        <!-- Should GWT files be processed in exploded deployment?
             If false, GWT's hosted mode is expected to handle these files. 
        -->
        <env.deploy.gwt>false</env.deploy.gwt>
      </properties>
    </profile>

    <profile>
      <id>hotdeploy</id>
<!-- 
      <activation>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
 -->
      <build>
        <plugins>
<!--  
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
-->
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>war-process-classes</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <property 
                      name="deploy-path" 
                      value="${as.deploy}/${app.context}.war" />
                    <echo>Hot Deploying to ${deploy-path}/WEB-INF/dev</echo>
                    <copy  
                      todir="${deploy-path}" 
                      verbose="true">
                      <fileset dir="src/main/webapp">
                        <include name="**/*" />
                        <exclude name="META-INF/context.xml" />
                      </fileset>
                      <fileset dir="war">
                        <include name="**/*" />
                        <exclude name="WEB-INF/lib/**/*" />
                        <exclude name="WEB-INF/classes/**/*" />
                        <exclude name="org.fedorahosted.flies.webtrans.**/*" />
                        <exclude name="WEB-INF/web.xml" />
                      </fileset>
                    </copy>
                    <copy 
                      todir="${deploy-path}/WEB-INF/dev"  
                      verbose="true">
                      <fileset dir="${project.build.outputDirectory}"  >
                        <includesfile name="hotdeploy.list"/>
                      </fileset>
                    </copy>
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>explode</id>
      <activation>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
      <build>
        <plugins>

          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>package</id>
                <phase>package</phase>
                <configuration>
                  <tasks>
                      <!-- Set the Ant property deploy.gwt if
                           Maven property env.deploy.gwt=true/yes/on
                        -->
                    <condition property="deploy.gwt">
                        <istrue value="${env.deploy.gwt}"/>
                    </condition>
                    <property name="deploy-path" value="${as.deploy}/${app.context}.war" />
                    <property name="temp-deploy-path" value="target/disabled.${app.context}.war" />
                    <echo>Removing old version at ${deploy-path}</echo>
                    <delete file="${deploy-path}" quiet="true" />
                    <delete quiet="true">
                        <fileset dir="${deploy-path}">
                            <!-- GWT hosted mode is responsible for keeping these files updated  -->
                            <exclude name="${gwt.filepattern}" unless="deploy.gwt" />
                        </fileset>
                    </delete>
                    <delete file="${as.deploy}/${app.ds.xml}" quiet="true" />
                    <echo>Exploding to ${temp-deploy-path}</echo>
                    <copy todir="${as.deploy}" file="${project.build.directory}/${app.ds.xml}" verbose="true" />
                    <move file="${deploy-path}" tofile="${temp-deploy-path}" 
                          failonerror="false" verbose="true"/>
                    <sync todir="${temp-deploy-path}" verbose="false" >
                      <fileset dir="${project.build.directory}/${project.build.finalName}">
                        <excludesfile name="hotdeploy.list"/>
                        <exclude name="${gwt.filepattern}" unless="deploy.gwt" />
                      </fileset>
                      <preserveintarget>
                        <!-- GWT hosted mode is responsible for keeping these files updated  -->
                          <include name="${gwt.filepattern}" unless="deploy.gwt" />
                      </preserveintarget>
                    </sync>
                    <mkdir dir="${temp-deploy-path}/WEB-INF/dev" />
                    <sync todir="${temp-deploy-path}/WEB-INF/dev" verbose="false" >
                      <fileset dir="${project.build.directory}/${project.build.finalName}/WEB-INF/classes">
                        <includesfile name="hotdeploy.list"/>
                      </fileset>
                    </sync>
                    <echo>Moving to ${deploy-path}</echo>
                    <move file="${temp-deploy-path}" tofile="${deploy-path}" verbose="true"/>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <!--
        Unexplode ear. Remove project from appserver deploy folder. execute e.g. 
        "mvn clean -Punexplode"
      -->
      <id>unexplode</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>clean</id>
                <phase>clean</phase>
                <configuration>
                  <tasks>
                    <property name="deploy-path" value="${as.deploy}/${app.context}.war" />
                    <delete  file="${deploy-path}"  quiet="true" />
                    <delete  dir="${deploy-path}" quiet="true" />
                    <!--
                      Uncomment this tag if you have deployed the *-ds.xml file to the appserver's deploy folder
                    -->
                      <delete file="${as.deploy}/${app.ds.xml}"  quiet="true" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>compile-gwt</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>gwt-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>compile</goal>
                  <!--  
                  <goal>generateAsync</goal>
                  <goal>test</goal>
                  -->
                </goals>
              </execution>
            </executions>
            <configuration>
              <runTarget>org.fedorahosted.flies.webtrans.Application/Application.html<!--?projContainerId=1&amp;localeId=de--></runTarget>
              <inplace>false</inplace>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>


  <build>
    <finalName>flies</finalName>
    
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering> <!-- filtering persistence.xml and components.properties -->
      </resource>
<!--
      <resource>
        <directory>src/main/webapp</directory>
      </resource>
-->
    </resources>
        
    <outputDirectory>war/WEB-INF/classes</outputDirectory>
    <plugins>
		<plugin>
			<!--
			This plugin will copy dependencies into the right outputDirectory.
			Usage: mvn dependency:copy-dependencies
			-->
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
			<configuration>
				<outputDirectory>war/WEB-INF/lib</outputDirectory>
				<overWriteReleases>true</overWriteReleases>
				<overWriteSnapshots>true</overWriteSnapshots>
				<overWriteIfNewer>true</overWriteIfNewer>
				<includeScope>runtime</includeScope>
				<excludeScope>provided</excludeScope>
			</configuration>
		</plugin>
	  <plugin>
	    <artifactId>maven-clean-plugin</artifactId>
	    <version>2.2</version>
	    <configuration>
	      <filesets>
	        <fileset>
	          <directory>war</directory>
	          <includes>
	            <include>org.fedorahosted.flies.*/**</include>
	            <include>.gwt-tmp</include>
	            <include>WEB-INF/lib/**</include>
	          </includes>
	          <followSymlinks>false</followSymlinks>
	        </fileset>
	        <fileset>
	          <directory>.gwt-tmp</directory>
	          <followSymlinks>false</followSymlinks>
	        </fileset>
	      </filesets>
	    </configuration>
	  </plugin>

      <!-- Specify a non-standard root dir for our war file, since the 
           Eclipse GWT plugin prefers it this way 
      -->
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warSourceDirectory>${webapp.dir}</warSourceDirectory>
<!-- 
          <webXml>${webapp.dir}/WEB-INF/web.xml</webXml>
 -->
          <webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
          <warSourceExcludes>.gwt-tmp/**,tomcat/**, WEB-INF/lib/**</warSourceExcludes>
          <webResources>
            <webResource>
              <directory>${webapp.dir}/WEB-INF</directory>
              <targetPath>WEB-INF</targetPath>
              <filtering>true</filtering>
              <includes>
                <include>components.xml</include>
                <include>jboss-web.xml</include>
<!-- 
                <include>web.xml</include>
 -->
              </includes>
            </webResource>
          </webResources>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
            </manifest>
            <manifestEntries>
              <Implementation-Version>${version}</Implementation-Version>
              <Implementation-Build>${maven.build.timestamp}</Implementation-Build>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      
      <!--
        Maven resources plugin The default resources folder for ear is the
        src/main/application folder. Stuff in this folder will go into the
        target ear folder. The projects *-ds.xml file is placed in the
        src/main/resources folder, so we'll have to use the
        maven-resources-plugin to copy the *-ds.xml file. The reason for
        this is that we need to control where to copy the *-ds.xml is in
        the target build. If we want to deploy the *-ds.xml file embedded
        into the ear project then the file is located in the target/ear root
        folder. If the *-ds.xml file should be deployed as a separate service,
        then the file is located the target folder. The explode profile
        will then copy the *-ds.xml file to the application server's deploy
        folder.
      -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-app-ds-xml</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>

              <!--
                Comment out this tag if you have deployed the *-ds.xml file to the appserver's deploy folder
              <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
              -->

              <!--
                Uncomment this tag if you have deployed the *-ds.xml file to the appserver's deploy folder
              -->
              <outputDirectory>${project.build.directory}</outputDirectory>
          
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>${app.ds.xml}</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>javax.xml.bind</groupId>
                  <artifactId>jaxb-api</artifactId>
                  <version>2.1</version>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.testOutputDirectory}/endorsed</outputDirectory>
            </configuration>
            <id>download-jaxb-api</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
          
        </executions>
      </plugin>
  
      <!-- tell mvn eclipse:eclipse to include config for the GWT Eclipse 
           plugin 
      -->
                        
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
		<downloadSources>true</downloadSources>
		<downloadJavadocs>false</downloadJavadocs>

        <additionalBuildcommands>
			<buildCommand>
				<name>com.google.gdt.eclipse.core.webAppProjectValidator</name>
			</buildCommand>
			<buildCommand>
				<name>com.google.gwt.eclipse.core.gwtProjectValidator</name>
			</buildCommand>
			<buildCommand>
				<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
				<triggers>auto,full,incremental,</triggers>
				<arguments>
                    <LaunchConfigHandle>&lt;project&gt;/.externalToolBuilders/copy-test-resources.launch</LaunchConfigHandle>
				</arguments>
			</buildCommand>
            <buildCommand>
                <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
                <triggers>auto,full,incremental,</triggers>
                <arguments>
                    <LaunchConfigHandle>&lt;project&gt;/.externalToolBuilders/mvn-resources.launch</LaunchConfigHandle>
                </arguments>
            </buildCommand>
        </additionalBuildcommands>

		  <additionalProjectnatures>
				<projectnature>com.google.gwt.eclipse.core.gwtNature</projectnature>
				<projectnature>com.google.gdt.eclipse.core.webAppNature</projectnature>
		  </additionalProjectnatures>

          <classpathContainers>
            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
            <classpathContainer>com.google.gwt.eclipse.core.GWT_CONTAINER</classpathContainer>
          </classpathContainers>
          <excludes>
            <!-- These are provided by the GWT container -->
              <exclude>com.google.gwt:gwt-servlet</exclude>
              <exclude>com.google.gwt:gwt-user</exclude>
          </excludes>
        </configuration>
      </plugin>
      
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <groups>unit-tests</groups>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>failsafe-maven-plugin</artifactId>
        <version>2.4.3-alpha-1</version>
        <configuration>
          <excludes>
            <exclude>none</exclude>
          </excludes>
          <includes>
            <include>**/*SeamTest.java</include>
          </includes>
          <suiteXmlFiles>
            <suiteXmlFile>src/test/resources/AllIntegrationTests.tng.xml</suiteXmlFile>
          </suiteXmlFiles>        
          <additionalClasspathElements>
            <additionalClasspathElement>${project.build.testOutputDirectory}/bootstrap</additionalClasspathElement>
            <additionalClasspathElement>${project.build.directory}/flies</additionalClasspathElement>
          </additionalClasspathElements>
          <childDelegation>true</childDelegation>
          <useSystemClassLoader>true</useSystemClassLoader>
          <argLine>-Djava.endorsed.dirs=${project.build.testOutputDirectory}/endorsed -Dsun.lang.ClassLoader.allowArraySyntax=true</argLine>
          
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
    </plugins>    
        
  </build>
  
  <dependencies>

    <!-- Seam Dependencies -->

    <dependency>
      <groupId>org.jboss.seam</groupId>
      <artifactId>jboss-seam</artifactId>
      <version>${version.seam}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam</groupId>
      <artifactId>jboss-seam-ui</artifactId>
      <version>${version.seam}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam</groupId>
      <artifactId>jboss-seam-debug</artifactId>
      <version>${version.seam}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam</groupId>
      <artifactId>jboss-seam-ioc</artifactId>
      <version>${version.seam}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam</groupId>
      <artifactId>jboss-seam-mail</artifactId>
      <version>${version.seam}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam</groupId>
      <artifactId>jboss-seam-remoting</artifactId>
      <version>${version.seam}</version>
      <exclusions>
          <exclusion>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
          </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam</groupId>
      <artifactId>jboss-seam-resteasy</artifactId>
      <version>${version.seam}</version>
    </dependency>

    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>${version.resteasy}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.annotation</groupId>
          <artifactId>jsr250-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-httpclient</groupId>
          <artifactId>commons-httpclient</artifactId>
        </exclusion>
        <exclusion>
          <groupId>tjws</groupId>
          <artifactId>webserver</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.scannotation</groupId>
          <artifactId>scannotation</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
      </exclusions>
      
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
      <version>${version.resteasy}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-atom-provider</artifactId>
      <version>${version.resteasy}</version>
    </dependency>
    <!--
      Available Seam artifacts as of 2.1.2-SNAPSHOT: jboss-seam-debug
      jboss-seam-excel jboss-seam-gen jboss-seam-ioc jboss-seam-jbas5
      jboss-seam-jul jboss-seam-mail jboss-seam-pdf jboss-seam-remoting
      jboss-seam-resteasy jboss-seam-rss jboss-seam-ui jboss-seam-wicket
    -->
    <!--  Drools -->

    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-core</artifactId>
      <version>${version.drools}</version>
    </dependency>

    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-compiler</artifactId>
      <version>${version.drools}</version>
    </dependency>

    <!-- Richfaces -->

    <dependency>
      <groupId>org.richfaces.framework</groupId>
      <artifactId>richfaces-api</artifactId>
      <version>${version.richfaces}</version>
    </dependency>

    <dependency>
      <groupId>org.richfaces.framework</groupId>
      <artifactId>richfaces-impl</artifactId>
      <version>${version.richfaces}</version>
    </dependency>

    <dependency>
      <groupId>org.richfaces.ui</groupId>
      <artifactId>richfaces-ui</artifactId>
      <version>${version.richfaces}</version>
    </dependency>

    <!-- We use a newer version of hibernate -->

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-search</artifactId>
      <version>3.1.1.GA</version>
    </dependency>

    <!--  Other -->

    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>1.5.4</version>
    </dependency>

    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
      <version>3.0.4</version>
    </dependency>

    <!-- Flies-specific dependencies -->

    <dependency>
      <groupId>org.fedorahosted.flies</groupId>
      <artifactId>flies-common-api</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.fedorahosted.flies</groupId>
      <artifactId>flies-rest-api</artifactId>
      <version>${project.version}</version>
    </dependency>    

    <dependency>
      <groupId>org.fedorahosted.flies.ui</groupId>
      <artifactId>flies-ui</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.fedorahosted.flies</groupId>
      <artifactId>flies-gwt-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>4.0.1</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.3</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.collections</groupId>
      <artifactId>google-collections</artifactId>
      <version>1.0-rc2</version>
    </dependency>

    <dependency>
      <groupId>org.fedorahosted.flies</groupId>
      <artifactId>flies-rest-api</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!--  JBoss AS deps -->
    
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>3.3.1.GA</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>3.1.0.GA</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <version>3.4.0.GA</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>3.4.0.GA</version>
      <exclusions>
        <exclusion>
          <groupId>javassist</groupId>
          <artifactId>javassist</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-jmx</artifactId>
      <version>3.3.1.GA</version>
    </dependency>

    <dependency>
      <groupId>javax.transaction</groupId>                  
      <artifactId>jta</artifactId>         
      <scope>provided</scope>
    </dependency>
    
    <!--
    <dependency>
      <groupId>org.jboss.envers</groupId>
      <artifactId>jboss-envers</artifactId>
      <version>1.2.1.GA-hibernate-3.3</version>
      <scope>provided</scope>
    </dependency>
    -->
    <!--  Testing dependencies -->
    
    <dependency>
      <groupId>org.jboss.embedded</groupId>
      <artifactId>jboss-embedded-all</artifactId>
      <version>${version.jboss.embedded}</version>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.microcontainer</groupId>
          <artifactId>jboss-deployers-client-spi</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.embedded</groupId>
          <artifactId>jboss-embedded</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.embedded</groupId>
      <artifactId>thirdparty-all</artifactId>
      <version>${version.jboss.embedded}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam.embedded</groupId>
      <artifactId>jboss-embedded-api</artifactId>
      <version>${version.jboss.embedded}</version>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.microcontainer</groupId>
          <artifactId>jboss-deployers-client-spi</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>
<!-- 
    <dependency>
      <groupId>org.eclipse.jdt</groupId>
      <artifactId>core</artifactId>
      <version>3.2.3.v_686_R32x</version>
      <scope>test</scope>
    </dependency>
 -->
    <!--
    We use a newer version of hibernate

    <dependency>
      <groupId>org.jboss.embedded</groupId>
      <artifactId>hibernate-all</artifactId>
      <version>${version.jboss.embedded}</version>
      <scope>embedded</scope>
    </dependency>
    -->

    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
<!-- needed by DBUnitImporter!  TODO: can we use a non-deployed scope like provided? 
      <scope>test</scope>
 -->
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Dependencies provided by JBoss As 4.2.3 -->
    
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.3</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>el-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>
      
    <dependency>
      <groupId>javax.ejb</groupId>
      <artifactId>ejb-api</artifactId>
      <version>3.0</version>
      <scope>provided</scope>
    </dependency>  

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.14</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.8.0.GA</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.8-brew</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.faces</groupId>
      <artifactId>jsf-api</artifactId>
      <version>1.2_12</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <version>1.2_12</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.xml.stream</groupId>
      <artifactId>stax-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.1.3</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>xpp3</groupId>
      <artifactId>xpp3_min</artifactId>
      <version>1.1.3.4.O</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.1</version>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <!-- 
       -->
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-incubator</artifactId>
      <version>2.0.1</version>
      <!-- 
      <scope>provided</scope>
       -->
    </dependency>

    <dependency>
      <groupId>net.customware.gwt.dispatch</groupId>
      <artifactId>gwt-dispatch</artifactId>
      <version>1.0.0</version>
      <!-- 
      <scope>provided</scope>
       -->
    </dependency>

    <dependency>
      <groupId>net.customware.gwt.presenter</groupId>
      <artifactId>gwt-presenter</artifactId>
      <version>1.0.0</version>
<!-- ErraiServiceConfigurator tries to load WebTransGinjector and its annotations
      <scope>provided</scope>
 -->
    </dependency>

    <dependency>
      <groupId>com.google.code.gwt-log</groupId>
      <artifactId>gwt-log</artifactId>
      <version>3.0.0</version>
      <!-- 
      <scope>provided</scope>
       -->
    </dependency>

    <dependency>
      <groupId>com.weborient.codemirror</groupId>
      <artifactId>gwt-codemirror</artifactId>
      <version>0.5-SNAPSHOT</version>
<!-- 
      <scope>provided</scope>
 -->
    </dependency>

    <dependency>
      <groupId>de.novanic</groupId>
      <artifactId>gwteventservice</artifactId>
	</dependency>
	
<!-- 
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-bus</artifactId> 
      <scope>compile</scope>
    </dependency>
 -->

	<dependency>
      <groupId>org.fedorahosted.flies</groupId>
      <artifactId>flies-gwt-api</artifactId>
      <version>${project.version}</version>
      <!-- 
      <scope>provided</scope>
       -->
    </dependency>

    <!-- test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <repositories>
  
    <repository>
      <id>gwt-presenter-repo</id>
      <name>gwt-presenter-repo</name>
      <url>http://gwt-presenter.googlecode.com/svn/maven2/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  
    <repository>
      <id>gwt-dispatch-repo</id>
      <name>gwt-dispatch-repo</name>
      <url>http://gwt-dispatch.googlecode.com/svn/maven2/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  
    <repository>
      <id>gwt-dispatch-deps-repo</id>
      <name>gwt-dispatch-deps-repo</name>
      <url>http://gwt-dispatch.googlecode.com/svn/tags/gwt-dispatch-1.0.0/lib</url>
      <layout>legacy</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <checksumPolicy>ignore</checksumPolicy>
      </releases>
    </repository>
    
  </repositories>

</project>
