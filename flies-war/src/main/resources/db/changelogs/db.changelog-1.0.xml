<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

    <changeSet author="flies" id="mysql_baseline" dbms="mysql">
    	<preConditions onFail="MARK_RAN">
    	    <not><tableExists tableName="HAccount"/></not>
    	</preConditions>
    	<comment>mysql baseline schema</comment>
    	<sqlFile path="db/mysql/mysql_baseline.sql" stripComments="true" />
    </changeSet>
    <changeSet author="flies" id="h2_baseline" dbms="h2">
    	<preConditions onFail="MARK_RAN">
    	    <not><tableExists tableName="HAccount"/></not>
    	</preConditions>
    	<comment>h2 baseline schema</comment>
    	<sqlFile path="db/h2/h2_baseline.sql" stripComments="true" />
    </changeSet>

    <!--
    NB: Triggers should be modified directly in these changeSets; don't add new changeSets for them.
    Don't change the author, or LiquiBase will treat it as a separate changeSet.
     -->
    <changeSet author="flies" id="mysql_triggers" runOnChange="true" dbms="mysql">
        <comment>mysql triggers</comment>
        <sql>
            DROP TRIGGER IF EXISTS `HDocument_Update`
        </sql>
        <sql splitStatements="false">
            CREATE TRIGGER `HDocument_Update`
               BEFORE UPDATE ON `HDocument`
               FOR EACH ROW BEGIN
                  IF NEW.revision != OLD.revision THEN
                     INSERT INTO HDocumentHistory(document_id,revision,contentType,docId,locale,name,path,lastChanged,last_modified_by_id,obsolete) 
                        VALUES (OLD.id,OLD.revision,OLD.contentType,OLD.docId,OLD.locale,OLD.name,OLD.path,OLD.lastChanged,OLD.last_modified_by_id,OLD.obsolete);
                  END IF;
               END
        </sql>
        <sql>
            DROP TRIGGER IF EXISTS `HTextFlow_Update`
        </sql>
        <sql splitStatements="false">
            CREATE TRIGGER `HTextFlow_Update`
               BEFORE UPDATE on `HTextFlow`
               FOR EACH ROW BEGIN
                  IF NEW.revision != OLD.revision THEN
                     INSERT INTO HTextFlowHistory(tf_id,revision,content, obsolete, pos)
                        VALUES (OLD.id,OLD.revision,OLD.content,OLD.obsolete,OLD.pos);
                  END IF;
               END
        </sql>
        <sql>
            DROP TRIGGER IF EXISTS `HTextFlowTarget_Update`
        </sql>
        <sql splitStatements="false">
            CREATE TRIGGER `HTextFlowTarget_Update`
               BEFORE UPDATE on `HTextFlowTarget`
               FOR EACH ROW BEGIN
                  IF NEW.versionNum != OLD.versionNum THEN
                     INSERT INTO HTextFlowTargetHistory (target_id,versionNum,content, lastChanged, last_modified_by_id, state, tf_revision)
                        VALUES (OLD.id,OLD.versionNum,OLD.content,OLD.lastChanged,OLD.last_modified_by_id,OLD.state,OLD.tf_revision);
                  END IF;
               END
        </sql>
    </changeSet>
    <changeSet author="flies" id="h2_triggers" runOnChange="true" dbms="h2">
    	<comment>h2 triggers</comment>
    	<sqlFile path="db/h2/create_trigger.sql" stripComments="true" />
    </changeSet>
</databaseChangeLog>
